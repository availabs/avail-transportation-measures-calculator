/* eslint import/no-dynamic-require: 0, global-require: 0 */

const { readdirSync, statSync } = require('fs');
const { join } = require('path');

const recursiveSearcher = dir => {
  const paths = readdirSync(dir, { encoding: 'utf8', withFileTypes: true }).map(
    p => join(dir, p)
  );

  const implPaths = [];

  paths.forEach(path => {
    const stats = statSync(path);

    if (stats.isFile() && path.match(/Calculator.js$/)) {
      implPaths.push(path);
    }
    if (stats.isDirectory()) {
      implPaths.push(...recursiveSearcher(path));
    }
  });

  return implPaths;
};

const rulesFilesPaths = recursiveSearcher(__dirname);

const metadata = rulesFilesPaths.reduce(
  (acc, path) => {
    const impl = require(path);
    const { measure, configDefaults, configOptions } = impl;

    if (measure) {
      acc.names[measure] = measure;
      acc.impls[measure] = impl;
      acc.configDefaults[measure] = configDefaults || null;
      acc.configOptions[measure] = configOptions || null;
    }

    return acc;
  },
  { names: {}, impls: {}, configDefaults: {}, configOptions: {} }
);

module.exports = metadata;
